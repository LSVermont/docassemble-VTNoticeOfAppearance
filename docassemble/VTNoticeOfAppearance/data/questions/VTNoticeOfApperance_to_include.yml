---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_a_notice_of_appearance_self_rep
code: |
  trial_court.address.address
  docket_number
  set_progress(10)
  nav.set_section("about")
  users1_role
  set_progress(20)
  users.gather()
  users[0].address.city
  set_progress(32)
  users[0].daytime_phone_number
  set_progress(50)
  email_consent
  nav.set_section('defendant')
  other_parties[0].name.first
  set_progress(78)
  signature_date
  nav.set_section('review')
  trial_court.address.county
  notice_of_appearance_preview_question
  set_progress(94)
  nav.set_section('sign')
  al_form_requires_digital_signature = False
  basic_questions_signature_flow    
  interview_order_a_notice_of_appearance_self_rep = True
---
id: choose a court
question: |
  Choose a court
fields:
  - note: |
      Choose the county court where you will file your forms. 
      
      If there's an existing court case, choose the county that the case is in. Look at the papers from the court.
      
      Not sure what county you are in? [Check this list of cities and towns to find the county.](https://en.m.wikipedia.org/wiki/List_of_municipalities_in_Vermont#Cities)
  - County: trial_court_index
    code: all_courts._load_courts()['address_county'].items()
---
id: users role
question: |
  Your role
fields:
  - "What is your role in this case?": users1_role
    datatype: checkboxes
    none of the above: False
    minlength: 1
    maxlength: 1
    choices:
    - "You are the \"Plaintiff,\" which means you started the case": role_plaintiff
    - "You are the \"Defendant,\" which means you did not start the case but are named in the case": role_defendant
    - "You have another role": role_other
  - "Describe your role in a couple of words": other_role_description
    maxlength: 28
    js show if: |
      val("users1_role") == "role_other"
  - "Plaintiff in this case": case_plaintiff_name
    maxlength: 28
    js show if: |
      val("users1_role") == "role_other"
  - "Defendant in this case": case_defendant_name
    maxlength: 28
    js show if: |
      val("users1_role") == "role_other"

---
#id: users mailing address
#question: |
#  Your mailing address
#fields:
#  - "Mailing address": users1_address_mailing
#    maxlength: 74
---
id: Gather users contact information
question: |
  What is your contact information?
subquestion: |
  Include **at least one safe way**<span style="color:#d30404;">*</span> for the court to reach you other than by mail. 
fields: 
  - Daytime phone number: users[0].daytime_phone_number
    datatype: al_international_phone
    required: False
  - Email: users[0].email    
    datatype: email
    required: False      
  - note: |
      <h2 class="h4">Email communications</h2>

      The other parties in the case must send you a copy of all documents they file with the court. If you check the box below, the other parties may send you the documents **only by email.** 
      If you select this option, be sure to check your email often.

  - "I agree to get documents about this case by email only": email_consent
    datatype: yesno
validation code: |
  if not (showifdef('users[0].daytime_phone_number')) and not (showifdef('users[0].email')):
    validation_error(word("You need to provide at least one contact method."), field="users[0].daytime_phone_number")
  if (showifdef('email_consent')) and not (showifdef('users[0].email')):
    validation_error(word("You need to provide an email."), field="users[0].email")
---
id: gather defendant name
sets:
  - other_parties[0].name.first
  - other_parties[0].name.last
question: |
  Name of the other party
fields:
  - First Name: other_parties[0].name.first
  - Middle Name: other_parties[0].name.middle
    required: False
  - Last Name: other_parties[0].name.last
  - Suffix: other_parties[0].name.suffix
    choices: 
      - Jr
      - Sr
      - I
      - II
      - III
    required: False

---
id: signature date
question: |
  Signature date
fields:
  - "Date of your signature for this form": signature_date
    datatype: date
    required: False
    default: |
      ${ today() }
  - note: |
      ${ after_last_question_we_will_generate_your_forms }
---
id: preview notice of appearance
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Tap the image to open it in a new tab. Tap the "Edit your answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_notice_of_appearance'), label='Edit your answers', color='info') }
  
  **Remember to come back to this window to continue and sign your form.**
continue button field: notice_of_appearance_preview_question    
---
id: your signature
code: |
  signature_fields = ['users[0].signature']
---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  #[user.address.address for user in users.complete_elements()]
  #addresses_to_search = [user.address for user in users.complete_elements()]
---
id: notice of appearance review screen
event: review_notice_of_appearance
question: |
  Review your answers
subquestion: |  
  ${ review_screen_instructions }
  
review:
  - Edit: trial_court_index
    button: |
      Filing this form in the Family Court of: **${ trial_court.address.county } County**
  - Edit: docket_number
    button: |
      Case number: 
      % if docket_number != '':
      **${ docket_number }**
      % else:
      **Unknown**
      % endif
  - Edit: users.revisit
    button: |
      About you (edit your name, address, contact info, signature)

      % for item in users:
        * **${ item }**
      % endfor
  - Edit: email_consent
    button: |
      Do you consent to getting email about this case?:
      **${ word(yesno(email_consent)) }**
  - Edit:
    - users1_role
    button: |      
      Your role in this case:     
      % if users1_role["role_plaintiff"]:
      **Plaintiff**
      % endif
      % if users1_role["role_defendant"]:
      **Defendant**
      % endif
      % if users1_role["role_other"]:
      **${ other_role_description }**
      
      Plaintiff's name in this case: **${ case_plaintiff_name }**
      
      Defendant's name in this case: **${ case_defendant_name }**
      % endif
   
#  - Edit: other_parties[0].name.first
#    button: |
#      Name of the other party
#
#      % for item in other_parties:
#        * **${ item }**
#      % endfor  
  - Edit: other_parties.revisit
    button: |
      Name of the other party

      % for item in other_parties:
        * **${ item }**
      % endfor
  - Edit: signature_date
    button: |
      Date of signature:
      **${ format_date(signature_date, format='M/d/yyyy') }**
  - note: |
      **${ review_screen_select_resume_will_take_moment }**
---
continue button field: users.revisit
question: |
  Edit your information
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.zip") else ""
  - Mailing (if different): |
      row_item.mailing_address if users_mailing_address_different else ""
  - Daytime phone number: |
      row_item.daytime_phone_number if defined("row_item.daytime_phone_number") else ""
  - Email: |
      row_item.email if defined("row_item.email") else ""
  - Signature: |
      row_item.signature if defined("row_item.signature") else ""
edit:
  - name.first
  - address.zip
  - mailing_address.address
  - daytime_phone_number
  - email
  - signature
confirm: True

---
continue button field: other_parties.revisit
question: |
  Edit other_parties
subquestion: |
  ${ other_parties.table }

  ${ other_parties.add_action() }
---
table: other_parties.table
rows: other_parties
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
id: download a_notice_of_appearance_self_rep
event: notice_of_appearance_download
question: |
  Review your forms and download and/or print them
subquestion: |
  ${ download_screen_instructions }

  ${ action_button_html(url_action('review_notice_of_appearance'), label='Edit your answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }
  
  ${ download_screen_bottom_instructions }
  
  ${ collapse_template(not_seeing_email) }
  ${ collapse_template(log_out_when_done) }

progress: 100
---
# ALDocument objects specify the metadata for each template
objects:
  - a_notice_of_appearance_self_rep_Post_interview_instructions: ALDocument.using(title="Instructions", filename="a_notice_of_appearance_self_rep_next_steps.docx", enabled=True, has_addendum=False)
  - a_notice_of_appearance_self_rep_attachment: ALDocument.using(title="Notice of appearance - self-represented", filename="a_notice_of_appearance_self_rep", enabled=True, has_addendum=False, )
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# `i` to show or hide the user's signature
attachment:
  name: Post-interview-Instructions
  filename: a_notice_of_appearance_self_rep_next_steps
  docx template file: a_notice_of_appearance_self_rep_next_steps.docx
  variable name: a_notice_of_appearance_self_rep_Post_interview_instructions[i]
  skip undefined: True
  tagged pdf: True
---
attachment:
  name: a notice of appearance self rep
  filename: a_notice_of_appearance_self_rep
  variable name: a_notice_of_appearance_self_rep_attachment[i]
  skip undefined: True
  pdf template file: a_notice_of_appearance_self_rep.pdf
  fields:
      - "docket_number": ${ docket_number }
      - "trial_court_county": ${ trial_court.address.county }
      - "users1_name": ${ users[0] }
      - "case_plaintiff_name": |
          % if users1_role["role_plaintiff"]:
            ${ users[0] }
          % endif
          % if users1_role["role_defendant"]:
            ${ other_parties[0] }
          % endif
          % if users1_role["role_other"]:
            ${ case_plaintiff_name }
          % endif
      - "case_defendant_name": |
          % if users1_role["role_defendant"]:
            ${ users[0] }
          % endif
          % if users1_role["role_plaintiff"]:
            ${ other_parties.short_list(2) }
          % endif
          % if users1_role["role_other"]:
            ${ case_defendant_name }
          % endif
      - "role_plaintiff": ${ users1_role["role_plaintiff"] }
      - "role_defendant": ${ users1_role["role_defendant"] }
      - "role_other": ${ users1_role["role_other"] }
      - "user1_other_role": ${ other_role_description }
      - "email_consent_yes": ${ email_consent }
      - "email_consent_no": ${ not email_consent }
      - "users1_address_mailing": |
          % if users_mailing_address_different:
            ${ users[0].mailing_address.address }
          % else:
            % if users[0].address.unit != '':
            ${ users[0].address.address }, Unit ${ showifdef("users[0].address.unit") }
            % else:
            ${ users[0].address.address }
            % endif
          % endif
      - "users1_address_city": |
          % if users_mailing_address_different:
            ${ users[0].mailing_address.city }
          % else:
            ${ users[0].address.city }
          % endif
      - "users1_address_state": |
          % if users_mailing_address_different:
            ${ users[0].mailing_address.state }
          % else:
            ${ users[0].address.state }
          % endif
      - "users1_address_zip": |
          % if users_mailing_address_different:
            ${ users[0].mailing_address.zip }
          % else:
            ${ users[0].address.zip }
          % endif
      - "users1_phone_number": ${ users[0].daytime_phone_number }
      - "users1_email": ${ users[0].email }
      - "signature_date": ${ format_date(signature_date, format='M/d/yyyy') }
      - "users1_signature": ${ users[0].signature_if_final(i) }